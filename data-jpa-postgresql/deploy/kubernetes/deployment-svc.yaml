apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-todo-api
spec:
  selector:
    matchLabels:
      app: springboot-todo-api
  replicas: 1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4004"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/actuator/prometheus"
      labels:
        app: springboot-todo-api
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: springboot-todo-api-sa
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 10
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - springboot-todo-api
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: springboot-todo-api
          image: joergjo/springboot-todo-api:latest
          args:
            - "--spring.profiles.active=passwordless"
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 4004
              name: actuator
          envFrom:
            - secretRef:
                name: springboot-todo-api-secrets
          env:
            - name: APPLICATIONINSIGHTS_ROLE_NAME
              value: springboot-todo-api
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: actuator
            failureThreshold: 10
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: actuator
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: actuator
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1Gi
      nodeSelector:
        "kubernetes.io/os": linux
      tolerations:
        - key: "kubernetes.azure.com/scalesetpriority"
          operator: "Equal"
          value: "spot"
          effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-todo-api
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      name: http
  selector:
    app: springboot-todo-api
# Alternate service using in internal load balancer a static IP address
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: springboot-todo-api
#   annotations:
#     service.beta.kubernetes.io/azure-load-balancer-ipv4: 10.1.127.127
#     service.beta.kubernetes.io/azure-load-balancer-internal: "true"
# spec:
#   type: LoadBalancer
#   ports:
#     - port: 80
#       targetPort: http
#       name: http
#   selector:
#     app: springboot-todo-api
